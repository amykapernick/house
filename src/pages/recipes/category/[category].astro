---
import RecipeFeed from "@components/meals/recipeFeed";
import generateCategories from "@utils/meals/categories";
import { getCollection } from "astro:content";
import Layout from '@layouts/default';
import type { Category, RecipeContent } from '@ts/meals';
import Categories from "@components/meals/categories";

interface Props {
	category: Category
}

export async function getStaticPaths() {
	const recipes = await getCollection('recipes')
	const categories = generateCategories(recipes)

	return categories.map((category) => ({
		params: { category: category.slug },
		props: {category}
	}))
}

const category: Category = Astro.props.category;

const allRecipes = await getCollection('recipes') as RecipeContent[]

const recipes: RecipeContent[] = allRecipes.filter((recipe) => {
	return recipe.data.categories?.includes(category.label);
})

const categories: Category[] = generateCategories(allRecipes);

---

<Layout>
	<h1>{category.label} Recipes</h1>
	<Categories categories={categories} current={Astro.params.category} />
	<RecipeFeed recipes={recipes} />
</Layout>
