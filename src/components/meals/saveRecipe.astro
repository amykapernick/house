---

interface Props {
	recipe: string
	class?: string
}

const {recipe, ...props } = Astro.props

const days = [
	{
		name: 'Saturday',
		number: 6
	},
	{
		name: 'Sunday',
		number: 0
	},
	{
		name: 'Monday',
		number: 1
	},
	{
		name: 'Tuesday',
		number: 2
	},
	{
		name: 'Wednesday',
		number: 3
	},
	{
		name: 'Thursday',
		number: 4
	},
	{
		name: 'Friday',
		number: 5
	}
]
---

<style>
	div {
		position: relative;
		font-size: 0.8em;

		& .list {
			display: none;
		}

		&[data-active="true"] .list {
			display: block;
		}
	}

	button {
		display: block;
		width: 100%;
	}

	.list {
		position: absolute;
		z-index: 2;
		width: 100%;
		margin: 5px 0 0;
		padding: 10px;
		background: var(--background);
		box-shadow: 0 0 10px rgb(0 0 0 / 20%);
		font-size: 0.8em;
		list-style: none;

		& li {
			&:not(:last-child) {
				margin-bottom: 10px;
			}
		}

		& button {
			&:not([data-selected="true"]) {

				@mixin button_secondary;
			}
		}
	}
</style>

<script>
	const buttons = document.querySelectorAll('.save_recipe')
	const dayButtons = document.querySelectorAll('.list button')
	const currentWeek = '2023-03-25'
	const currentSavedRecipes = localStorage.getItem('recipes')
	const parsedRecipes = currentSavedRecipes ? JSON.parse(currentSavedRecipes) : {}
	const currentWeekRecipes = parsedRecipes[currentWeek] || []

	buttons.forEach(button => {
		button.addEventListener('click', (props: {currentTarget: any}) => {
			const { currentTarget } = props

			if(!currentTarget) return

			const recipe = currentTarget.getAttribute('data-recipe')

			if(!recipe) return

			const dropdown = document.querySelector(`#save_${recipe}`)

			if(!dropdown) return

			if(dropdown?.getAttribute('data-active') === 'true') {
				dropdown.setAttribute('data-active', 'false')
			} else {
				dropdown.setAttribute('data-active', 'true')
			}
		})
	})

	dayButtons.forEach(button => {
		const recipe = button.getAttribute('data-recipe')
		const day = button.getAttribute('data-day') || 0
		const dropdown = document.querySelector(`#save_${recipe}`)

		if(currentWeekRecipes[day]?.includes(button.getAttribute('data-recipe'))) {
			button.setAttribute('data-selected', 'true')
		}

		button.addEventListener('click', () => {
			const local = localStorage.getItem('recipes')
			const savedRecipes = local ? JSON.parse(local) : {[currentWeek]: []}

			if(!savedRecipes[currentWeek]) {
				savedRecipes[currentWeek] = []
			}

			if(!savedRecipes[currentWeek][day]) {
				savedRecipes[currentWeek][day] = []
			}

			if(button.getAttribute('data-selected') === 'true') {
				savedRecipes[currentWeek][day] = savedRecipes[currentWeek][day].filter((item: string) => item !== recipe)
				button.setAttribute('data-selected', 'false')
			}
			else {
				savedRecipes[currentWeek][day].push(recipe)
			}			

			localStorage.setItem('recipes', JSON.stringify(savedRecipes))

			if(!dropdown) return

			dropdown.setAttribute('data-active', 'false')
		})
	})
</script>

<div id={`save_${recipe}`} {...props}>
	<button data-recipe={recipe} class="save_recipe">Save Recipe</button>
	<ul class="list">
		{days.map(day => (
			<li>
				<button 
					data-day={day.number}
					data-recipe={recipe}
				>
					{day.name}
				</button>
			</li>
		))}
	</ul>
</div>

